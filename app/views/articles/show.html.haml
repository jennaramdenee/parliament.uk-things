.container
  .article--wrapper
    %article{ id: 'content', tabindex: '0' }
      %header
        -# Product wrapper
        - if @root_collections.any?
          = render partial: 'collections/delimited_links', locals: { collections: @root_collections }

        %h1= title(sanitize(@article.title))

        -# All the collections an Article sits in
        - if @collections.any?
          = t('.in')
          = render partial: 'collections/delimited_links', locals: { collections: @collections }

        = MarkdownHelper.markdown(@article.article_summary)

      %div{ role: 'main' }
        = MarkdownHelper.markdown(@article.article_body)

      - if @collections.any?
        %footer
          %h2= t('.up_to')
          = render partial: 'collections/delimited_links', locals: { collections: @collections }

    %aside
      - @collections.each do |collection|
        %h2= sanitize(collection.name)
        .block
          %ul.list--pipe
            - collection.articles.each do |article|
              - if @article.graph_id == article.graph_id
                %li.active
                  .list--details= sanitize(article.article_title)
              - else
                %li
                  .list--details
                    = link_to(sanitize(article.article_title), article_path(article.graph_id))
            - collection.subcollections.each do |subcollection|
              %li
                .list--details
                  = link_to(sanitize(subcollection.name), collection_path(subcollection.graph_id))
